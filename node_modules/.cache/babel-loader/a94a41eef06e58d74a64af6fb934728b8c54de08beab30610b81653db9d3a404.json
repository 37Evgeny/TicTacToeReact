{"ast":null,"code":"var _jsxFileName = \"/Users/totenkopf/Desktop/Programming/Git/TicTacToeReact/TicTacToeReact/src/components/Game/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './game.css';\nimport Board from '../Board/board';\nimport { calculateWinner } from '../utils/winner';\nimport Step from '../Step/step';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handleClick = index => {\n    const boardCopy = [...board];\n    // Определить был ли клик по ячейке или игра закончилась\n    if (winner || boardCopy[index]) return;\n    // Определить чей ход\n    boardCopy[index] = xIsNext ? 'X' : 'O';\n    // Обносить стейт\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n  const startNewGame = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start__btn\",\n      onClick: () => setBoard(Array(9).fill(null)),\n      children: \"\\u041D\\u043E\\u0432\\u0430\\u044F \\u0438\\u0433\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  };\n  console.log(board);\n  function renderMessage(board, elem) {\n    return board.find(i => i === elem) != -1;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [startNewGame(), /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      click: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), renderMessage ? /*#__PURE__*/_jsxDEV(Step, {\n      winner: winner,\n      xIsNext: xIsNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"znBF1eYeJNOReqN4BeETvwkOe4A=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","Step","jsxDEV","_jsxDEV","Game","_s","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","handleClick","index","boardCopy","startNewGame","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","renderMessage","elem","find","i","squares","click","_c","$RefreshReg$"],"sources":["/Users/totenkopf/Desktop/Programming/Git/TicTacToeReact/TicTacToeReact/src/components/Game/game.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './game.css'\nimport Board from '../Board/board';\nimport {calculateWinner} from '../utils/winner';\nimport Step from '../Step/step';\n\nconst Game = () => {\n\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [xIsNext, setXIsNext] = useState(true);\n    const winner = calculateWinner(board);\n\n    const handleClick = (index) =>{\n        const boardCopy = [...board]\n        // Определить был ли клик по ячейке или игра закончилась\n            if(winner || boardCopy[index]) return;\n        // Определить чей ход\n            boardCopy[index] = xIsNext ? 'X' : 'O';\n        // Обносить стейт\n        setBoard(boardCopy)\n        setXIsNext(!xIsNext)\n    }\n\n    const startNewGame = () => {\n        return (\n            <button className='start__btn' onClick={() => setBoard(Array(9).fill(null))}>Новая игра</button>\n        )\n    }\n    console.log(board)\n\n\n    function renderMessage(board, elem) {\n        return board.find((i) => i === elem) != -1;\n    }\n  \n    return (\n        <div className='wrapper'>\n            {startNewGame()} \n            <Board squares = {board} click = {handleClick}/>\n            {\n                renderMessage\n                ? <Step winner={winner} xIsNext={xIsNext}/>\n                : <p>hello</p>\n            }\n           \n            {/* <p className='game__info'>\n            {\n             winner ? 'Победил ' + winner : 'Сейчас ходит ' + ( xIsNext ? 'X' : 'O')\n            }\n            {console.log(xIsNext + ' game')}\n            {console.log(winner + ' game')}\n            </p> */}\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAAQC,eAAe,QAAO,iBAAiB;AAC/C,OAAOC,IAAI,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMc,MAAM,GAAGZ,eAAe,CAACM,KAAK,CAAC;EAErC,MAAMO,WAAW,GAAIC,KAAK,IAAI;IAC1B,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B;IACI,IAAGM,MAAM,IAAIG,SAAS,CAACD,KAAK,CAAC,EAAE;IACnC;IACIC,SAAS,CAACD,KAAK,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IAC1C;IACAH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACvB,oBACIb,OAAA;MAAQc,SAAS,EAAC,YAAY;MAACC,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAE;MAAAU,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAExG,CAAC;EACDC,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;EAGlB,SAASoB,aAAaA,CAACpB,KAAK,EAAEqB,IAAI,EAAE;IAChC,OAAOrB,KAAK,CAACsB,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKF,IAAI,CAAC,IAAI,CAAC,CAAC;EAC9C;EAEA,oBACIxB,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAE,QAAA,GACnBH,YAAY,CAAC,CAAC,eACfb,OAAA,CAACJ,KAAK;MAAC+B,OAAO,EAAIxB,KAAM;MAACyB,KAAK,EAAIlB;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAE5CG,aAAa,gBACXvB,OAAA,CAACF,IAAI;MAACW,MAAM,EAAEA,MAAO;MAACF,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBACzCpB,OAAA;MAAAgB,QAAA,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAUjB,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAhDKD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAkDV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}