{"ast":null,"code":"var _jsxFileName = \"/Users/totenkopf/Desktop/Programming/Git/Tic Tac Toe/tic-tac-toe/src/components/Game/game.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './game.css';\nimport Board from '../Board/board';\nimport { calculateWinner } from '../utils/winner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handleClick = index => {\n    const boardCopy = [...board];\n    // Определить был ли клик по ячейке или игра закончилась\n    if (winner || boardCopy[index]) return;\n    // Определить чей ход\n    boardCopy[index] = xIsNext ? 'X' : 'O';\n    // Обносить стейт\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      click: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"znBF1eYeJNOReqN4BeETvwkOe4A=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","jsxDEV","_jsxDEV","Game","_s","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","handleClick","index","boardCopy","className","children","squares","click","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/totenkopf/Desktop/Programming/Git/Tic Tac Toe/tic-tac-toe/src/components/Game/game.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './game.css'\nimport Board from '../Board/board';\nimport { calculateWinner } from '../utils/winner';\n\nconst Game = () => {\n\n    const [board, setBoard] = useState(Array(9).fill(null));\n    const [xIsNext, setXIsNext] = useState(true);\n    const winner = calculateWinner(board);\n\n    const handleClick = (index) =>{\n        const boardCopy = [...board]\n        // Определить был ли клик по ячейке или игра закончилась\n            if(winner || boardCopy[index]) return;\n        // Определить чей ход\n            boardCopy[index] = xIsNext ? 'X' : 'O';\n        // Обносить стейт\n        setBoard(boardCopy)\n        setXIsNext(!xIsNext)\n    }\n\n    return (\n        <div className='wrapper'>\n            <Board squares = {board} click = {handleClick}/>\n        </div>\n    );\n}\n\nexport default Game;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAASC,eAAe,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,MAAM,GAAGX,eAAe,CAACK,KAAK,CAAC;EAErC,MAAMO,WAAW,GAAIC,KAAK,IAAI;IAC1B,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B;IACI,IAAGM,MAAM,IAAIG,SAAS,CAACD,KAAK,CAAC,EAAE;IACnC;IACIC,SAAS,CAACD,KAAK,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IAC1C;IACAH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,oBACIP,OAAA;IAAKa,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBd,OAAA,CAACH,KAAK;MAACkB,OAAO,EAAIZ,KAAM;MAACa,KAAK,EAAIN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAAAlB,EAAA,CAtBKD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}